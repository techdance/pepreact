import React from 'react';
import axios from 'axios';
import '../style-register.css';
import logo from '../assets/images/logo-ahea.png';
import axios from 'axios';
import { AvForm, AvField } from 'availity-reactstrap-validation';
import 'react-inputs-validation/lib/react-inputs-validation.min.css';
// import * as URLConfig from "../../../URLConfig";


function shoot() {
	var txt_prefix = document.getElementById("txt_prefix").value;
	var txt_first_name = document.getElementById("txt_first_name").value;
	var txt_last_name = document.getElementById("txt_last_name").value;
	var txt_email = document.getElementById("txt_email").value;
	var txt_inst_name = document.getElementById("txt_inst_name").value;
	var txt_password = document.getElementById("txt_password").value;
	axios({
		method: 'get',
		url: 'http://40.70.76.8/ahea/action_page.php',
		params: {
			txt_prefix: txt_prefix,
			txt_first_name: txt_first_name,
			txt_last_name: txt_last_name,
			txt_email: txt_email,
			txt_inst_name: txt_inst_name,
			txt_password: txt_password
		},
		config: { headers: { 'Content-Type': 'multipart/form-data' } }
	})
		.then(function (response) {
			//handle success
			document.getElementById("txt_prefix").value = "";
			document.getElementById("txt_first_name").value = "";
			document.getElementById("txt_last_name").value = "";
			document.getElementById("txt_email").value = "";
			document.getElementById("txt_inst_name").value = "";
			document.getElementById("txt_password").value = "";
			document.getElementById("txt_confirm_password").value = "";
			alert("You have registered successfully.");
			//console.log(response)
		})
		.catch(function (response) {
			//handle error
			console.log(response)
		});
}
function HomepageImage() {
	const url = 'https://cdn.filestackcontent.com/XYrHCaFGRSaq0EPKY1S6';
	const formData = {
		"txt_first_name":"",
		"txt_last_name":"",
		"txt_email":"",
		"txt_inst_name":"",
		"txt_password":"",
		"txt_confirm_password":""
	}

	return (
		<div id="container">
			<header id="wrap-logo" className="ac">
				<a href="#"><img src={logo} /></a>
			</header>
			<section id="wrap-form">
				<div>
					<h1>Registration Form</h1>
				</div>
				<AvForm className="form-Category" onSubmit={(e) => { this.handleSubmit(e) }}>
                  <Row className="justify-content-center">
                    <Col md="8">
                      <Row>
                        <Col md="6">
                          <FormGroup>
                            <Label className="control-label" htmlFor="txt_prefix">Party Name <b>*</b></Label>
                            <AvField type="text" id="txt_prefix" name="txt_prefix"
                              placeholder="" value={this.state.newUser.txt_prefix} onChange={this.handleChange} />
                          </FormGroup>
                        </Col>
                        
						<Col md="6">
						<FormGroup>
							<Label className="control-label" htmlFor="txt_first_name">User Name <b>*</b></Label>
							<AvField type="text" id="txt_first_name" name="txt_first_name" placeholder=""
							value={this.state.newUser.txt_first_name} onChange={this.handleChange} />
						</FormGroup>
						</Col>

						<Col md="6">
						<FormGroup>
							<Label className="control-label" htmlFor="txt_last_name">User Name <b>*</b></Label>
							<AvField type="text" id="txt_last_name" name="txt_last_name" placeholder=""
							value={this.state.newUser.txt_last_name} onChange={this.handleChange} />
						</FormGroup>
						</Col>

						<Col md="6">
                          <FormGroup>
                            <Label className="control-label" htmlFor="txt_email">Email RM 1 <b>*</b></Label>
                            <AvField type="email" id="txt_email" name="txt_email" placeholder=""
                              value={this.state.newUser.txt_email} onChange={this.handleChange}
                              validate={{
                                pattern: { value: '/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g', errorMessage: 'Please enter valid email address' }
                              }}
                            />
                          </FormGroup>
                        </Col>

						<Col md="6">
						<FormGroup>
							<Label className="control-label" htmlFor="txt_inst_name">User Name <b>*</b></Label>
							<AvField type="text" id="txt_inst_name" name="txt_inst_name" placeholder=""
							value={this.state.newUser.txt_inst_name} onChange={this.handleChange} />
						</FormGroup>
						</Col>

                        <Col md="6">
                          <FormGroup>
                            <Label className="control-label" htmlFor="txt_password">Password <b>*</b></Label>
                            <AvField type="password" id="txt_password" name="txt_password"
                              placeholder="" value={this.state.newUser.txt_password} onChange={this.handleChange} validate={{
                                pattern: { value: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[#$^+=!*()@%&]).{8,20}$", errorMessage: 'Use 8 or more characters with a mix of letters (Caps also), numbers & symbols' },
                              }} />
                          </FormGroup>
                        </Col>
                        <Col md="6">
                          <FormGroup>
                            <Label className="control-label" htmlFor="txt_confirm_password">Confirm Password <b>*</b></Label>
                            <AvField type="password" id="txt_confirm_password" name="txt_confirm_password" placeholder=""
                              onChange={this.handleChange}
                              value={this.state.txt_confirm_password}
                              validate={
                                {
                                  myValidation: passwordMatch
                                }
                              }
                            />
                          </FormGroup>
                        </Col>
                        
                      </Row>
                      <div className="text-right mb-3">
                        <Button type="submit" size="sm" color="primary" >Create Account</Button>
                        
                        {/* <Button type="reset" size="sm" color="danger" onClick={this.resetForm}>  Reset</Button> */}
                      </div>
                    </Col>
                  </Row>

                </AvForm>
			</section>
		</div>
	);
}

export default HomepageImage;
